name: Validate Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - integration
    paths:
      - "force-app/**"

jobs:
  validate-deployment:
    runs-on: ubuntu-latest
    name: "Test Deployment and Test Runs"
    steps:
      - uses: actions/checkout@v4

      # No more references
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: |
            node_modules
            ~/.cache/sf/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies and copy config files and rules
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci --prefer-offline --no-audit
        shell: bash

      - name: Copy config files and rules only
        if: steps.cache-nodemodules.outputs.cache-hit == 'true'
        run: |
          npm run postinstall
        shell: bash

      - name: Install SF CLI and SFDX Scanner Plugin
        run: |
          npm install @salesforce/cli --location=global
          sf plugins install @salesforce/sfdx-scanner@3.26.0
        shell: bash

      - name: "Populate auth file with INTEGRATION_SANDBOX_SFDX_URL secret"
        run: |
          echo ${{ secrets.INTEGRATION_SANDBOX_SFDX_URL}} > ./INTEGRATION_SANDBOX_SFDX_URL.auth

      - name: "Populate auth file with DEVOPS_CENTER_HOME_PROD secret"
        run: |
          echo ${{ secrets.PROD_DEVOPS_CENTER_HOME_SFDX_URL}} > ./PROD_DEVOPS_CENTER_HOME_SFDX_URL.auth

      - name: Authenticate against DevOps Center Home (Production Org)
        run:
          sf org login sfdx-url --sfdx-url-file ./PROD_DEVOPS_CENTER_HOME_SFDX_URL.auth
          --set-default --alias PROD_DEVOPS_CENTER_HOME

      - name: Create Manifest File for Deployment
        run: |
          node .ci/create-manifest.js ${{ github.event.pull_request.head.ref }}
          cat package.xml

      - name: Authenticate against integration sandbox
        run:
          sf org login sfdx-url --sfdx-url-file ./INTEGRATION_SANDBOX_SFDX_URL.auth
          --set-default --alias integration_sandbox

      - name: Validate deployment and run local tests
        run: sf project deploy validate --manifest package.xml --wait 120
          --test-level=RunLocalTests --target-org integration_sandbox
